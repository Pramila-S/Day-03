For the given JSON iterate over all for loops (for, for in, for of, forEach)?

let obj = [ { fname: "Pramila", age: "29", city: "Tvl" }, { fname: "Balaji", age: "31", city: "Chennai" }, { fname: "Pratyush", age: "3", city: "Mumbai" }, ]; 

a)FOR->

for(i=0;i<obj.length;i++){
      //console.log(obj[i].fname)
      //console.log(obj[i].age)
      console.log(obj[i].city)
}

Output:
Pramila
29
Tvl
Balaji
31                // overall console
Chennai
Pratyush
3
Mumbai

Pramila
Balaji           // second and third console command     
Pratyush

29
31            // first and third console command
3

Tvl
Chennai       // first and second console command
Mumbai

B)for in->
 for(i=0;i<obj.length;i++){
  for(let param in obj[i]){
       console.log(`${param}: ${obj[i][param]}`);
  }
  }

Output:
fname: Pramila
age: 29
city: Tvl
fname: Balaji
age: 31
city: Chennai
fname: Pratyush
age: 3
city: Mumbai

C)for of->
  for(let  elements of obj){
    console.log(elements.fname)
      console.log(elements.age)
      console.log(elements.city)  
  }
  
Output:
Pramila
Balaji        //second and third console command
Pratyush

29
31        // first and third console command
3

Tvl
Chennai     // first and second console command
Mumbai

Pramila
29
Tvl
Balaji       // overall console
31
Chennai
Pratyush
3
Mumbai

D)for each->
  obj.forEach(function(objects){
    console.log(objects.fname)      
    console.log(objects.age)
    console.log(objects.city)
    console.log(objects);
  })

Output:
Pramila
Balaji        //second, third and fourth console command
Pratyush

29
31        // first, third and fourth console command
3

Tvl
Chennai     // first, second and fourth console command
Mumbai

{ fname: 'Pramila', age: '29', city: 'Tvl' }
{ fname: 'Balaji', age: '31', city: 'Chennai' }     // first ,second and third console command
{ fname: 'Pratyush', age: '3', city: 'Mumbai' }

Pramila
29
Tvl
{ fname: 'Pramila', age: '29', city: 'Tvl' }
Balaji
31
Chennai
{ fname: 'Balaji', age: '31', city: 'Chennai' }     // overall console
Pratyush
3
Mumbai
{ fname: 'Pratyush', age: '3', city: 'Mumbai' }




Create your own resume data in JSON format?

let resume={
    basics:{
      name: "Pramila",
      picture: " ",
      email: "pramila@gmail.com",
      phone: "012 345 6789",
      degree: "M.sc",
      website: "hhtps://dhibqjijnoh9t",
      summary: "Paragraph",

      
      location:{
        address: "Gvp colony",
        postalCode: "515 411",
        city: "Tirunelveli",
        countryCode: "TAMILNADU",
        region: "Tirunelveli"
      }
      },
    work: [
      {
        company: "Pramila",
        position: "MERN stack developer",
        summary: "A one-sentence to one-paragraph summary of this employer or position"
      }
    ],
    volunteer: [
      {
        organization: "volunteer organization name",
        position: " job title",
        website: "The URL for the employer's website",
        summary: "A one-sentence to one-paragraph summary of this employer or position"
       }
    ],
    education: [
      {
        institution: "Little flower Hr sec school",
        area: "Tirunelveli",
        studyType: "State board",
        startDate: "2004-06-04",
        endDate: "2013-03-26",
        gpa: "",
        courses: [
          ""
        ]
      }
    ],
    awards: [
      {
        title: "Best student",
        date: "2015-07-25",
        awarder: "Founder of the institution",
        summary: "xxx xxxx xxx"
      }
    ],
    skills: [
      {
        name: "A category of job skills (e.g. 'Programming Languages')",
        level: "Basic",
        keywords: [
          "Keywords under this category (e.g. 'Javascript', 'C++')"
        ]
      }
    ],
    languages: [
      {
        language: "Tamil,English,Hindi(Learning)",
        fluency: "Tamil,English"
      }
    ],
    interests: [
      {
        name: "Sports",
        keywords: [
          "Keywords under this category (e.g. 'Badminton', 'Volley ball')"
        ]
      }
    ]
  };
  let a = JSON.stringify(resume);
  console.log(a);


Output:

{"basics":{"name":"Pramila","picture":" ","email":"pramila@gmail.com","phone":"012 345 6789","degree":"M.sc","website":"hhtps://dhibqjijnoh9t","summary":"Paragraph","location":{"address":"Gvp colony","postalCode":"515 411","city":"Tirunelveli","countryCode":"TAMILNADU","region":"Tirunelveli"}},"work":[{"company":"Pramila","position":"MERN stack developer","summary":"A one-sentence to one-paragraph summary of this employer or position"}],"volunteer":[{"organization":"volunteer organization name","position":" job title","website":"The URL for the employer's website","summary":"A one-sentence to one-paragraph summary of this employer or position"}],"education":[{"institution":"Little flower Hr sec school","area":"Tirunelveli","studyType":"State board","startDate":"2004-06-04","endDate":"2013-03-26","gpa":"","courses":[""]}],"awards":[{"title":"Best student","date":"2015-07-25","awarder":"Founder of the institution","summary":"xxx xxxx xxx"}],"skills":[{"name":"A category of job skills (e.g. 'Programming Languages')","level":"Basic","keywords":["Keywords under this category (e.g. 'Javascript', 'C++')"]}],"languages":[{"language":"Tamil,English,Hindi(Learning)","fluency":"Tamil,English"}],"interests":[{"name":"Sports","keywords":["Keywords under this category (e.g. 'Badminton', 'Volley ball')"]}]}




Read about the difference between window, screen and document in javascript ?

(i) Window is the execution context and global object for that context's JavaScript
(ii) Document contains the DOM, initialized by parsing HTML
(iii) Screen describes the physical display's full screen
       The most basic relationship among the three is that each browser tab has its own window, and a window has window.document and window.screen properties. The browser tab's window is the global context, so document and screen refer to window.document and window.screen. 

Window:
      Each browser tab has its own top-level window object. Each <iframe> (and deprecated <frame>) element has its own window object too, nested within a parent window. Each of these windows gets its own separate global object. window.window always refers to window, but window.parent and window.top might refer to enclosing windows, giving access to other execution contexts. In addition to document and screen described below, window properties include

* setTimeout() and setInterval() binding event handlers to a timer
* location giving the current URL
* history with methods back() and forward() giving the tab's mutable history
* navigator describing the browser software

Document:
        Each window object has a document object to be rendered. These objects get confused in part because HTML elements are added to the global object when assigned a unique id. E.g., in the HTML snippet

<body>
  <p id="text"> This is the first sentence.</p>
</body>
the paragraph element can be referenced by any of the following:

window.text or window["text"]
document.getElementById("text")
document.querySelector("#text")
document.body.firstChild
document.body.children[0]


Screen:
      The window object also has a screen object with properties describing the physical display:

* screen properties width and height are the full screen
* screen properties availWidth and availHeight omit the toolbar

      The portion of a screen displaying the rendered document is the viewport in JavaScript, which is potentially confusing because we call an application's portion of the screen a window when talking about interactions with the operating system. The getBoundingClientRect() method of any document element will return an object with top, left, bottom, and right properties describing the location of the element in the viewport.
